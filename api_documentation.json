{
  "openapi": "3.0.2",
  "info": { "title": "FastAPI", "version": "0.1.0" },
  "paths": {
    "/presence": {
      "post": {
        "summary": "Presence",
        "operationId": "presence_presence_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_presence_presence_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/presenceResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/conformity": {
      "post": {
        "summary": "Conformity",
        "operationId": "conformity_conformity_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_conformity_conformity_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/conformityResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_conformity_conformity_post": {
        "title": "Body_conformity_conformity_post",
        "required": ["file"],
        "type": "object",
        "properties": {
          "file": { "title": "File", "type": "string", "format": "binary" }
        }
      },
      "Body_presence_presence_post": {
        "title": "Body_presence_presence_post",
        "required": ["file"],
        "type": "object",
        "properties": {
          "file": { "title": "File", "type": "string", "format": "binary" }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ValidationError" }
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": ["loc", "msg", "type"],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": { "type": "string" }
          },
          "msg": { "title": "Message", "type": "string" },
          "type": { "title": "Error Type", "type": "string" }
        }
      },
      "conformityResponse": {
        "title": "conformityResponse",
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": { "title": "Type", "type": "string" },
          "image": { "title": "Image", "type": "string" },
          "distance": { "title": "Distance", "type": "number" },
          "message": { "title": "Message", "type": "string" },
          "intersection": {
            "title": "Intersection",
            "type": "array",
            "items": {}
          },
          "ruler_axis": { "title": "Ruler Axis", "type": "array", "items": {} },
          "protection_axis": {
            "title": "Protection Axis",
            "type": "array",
            "items": {}
          }
        },
        "example": {
          "type": "error si le model n'arrive pas à traiter l'image, valid sinon",
          "image": "image encodé en bytes",
          "distance": "si type est valid : distance mesurée en cm, None sinon",
          "message": "si type est error : message à renvoyer à l'utilisateur pour expliquer l'erreur",
          "intersection": "si type est valid, tuple des coordonées de l'intersection",
          "ruler_axis": "Deux points qui définissent l'axe de la règle",
          "protection_axis": "Deux points qui définissent l'axe de la protection"
        }
      },
      "presenceResponse": {
        "title": "presenceResponse",
        "required": ["score", "image", "box", "prediction"],
        "type": "object",
        "properties": {
          "score": { "title": "Score", "type": "number" },
          "image": { "title": "Image", "type": "string" },
          "box": { "title": "Box", "type": "array", "items": {} },
          "prediction": { "title": "Prediction", "type": "boolean" }
        },
        "example": {
          "score": "score de confiance entre 0 et 1",
          "image": "image encodé en bytes",
          "box": "list qui définit le rectangle de justification [xmin,ymin,xmax,ymax]",
          "prediction": "True si presence de protection, False sinon"
        }
      }
    }
  }
}
